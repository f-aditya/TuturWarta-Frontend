/* eslint-disable */
/* tslint:disable */
// @ts-nocheck
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: t4V3p66SUxNrC7VqQmN1Jm
// Component: 0mCKeT4MIMer

import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import {
  Flex as Flex__,
  MultiChoiceArg,
  PlasmicDataSourceContextProvider as PlasmicDataSourceContextProvider__,
  PlasmicIcon as PlasmicIcon__,
  PlasmicImg as PlasmicImg__,
  PlasmicLink as PlasmicLink__,
  PlasmicPageGuard as PlasmicPageGuard__,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  Stack as Stack__,
  StrictProps,
  Trans as Trans__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  generateOnMutateForSpec,
  generateStateOnChangeProp,
  generateStateOnChangePropForCodeComponents,
  generateStateValueProp,
  get as $stateGet,
  hasVariant,
  initializeCodeComponentStates,
  initializePlasmicStates,
  makeFragment,
  omit,
  pick,
  renderPlasmicSlot,
  set as $stateSet,
  useCurrentUser,
  useDollarState,
  usePlasmicTranslator,
  useTrigger,
  wrapWithClassName
} from "@plasmicapp/react-web";
import {
  DataCtxReader as DataCtxReader__,
  useDataEnv,
  useGlobalActions
} from "@plasmicapp/react-web/lib/host";

import NavbarTuturWarta from "../../NavbarTuturWarta"; // plasmic-import: 75DgtyuXWbWG/component

import "@plasmicapp/react-web/lib/plasmic.css";

import plasmic_antd_5_hostless_css from "../antd_5_hostless/plasmic.module.css"; // plasmic-import: ohDidvG9XsCeFumugENU3J/projectcss
import plasmic_plasmic_rich_components_css from "../plasmic_rich_components/plasmic.module.css"; // plasmic-import: jkU633o1Cz7HrJdwdxhVHk/projectcss
import plasmic_library_tailwind_3_4_colors_css from "../library_tailwind_3_4_color_tokens/plasmic.module.css"; // plasmic-import: 5ZtnypMovRHeeP3YTdPCYL/projectcss
import plasmic_library_tailwind_3_4_number_tokens_css from "../library_tailwind_3_4_number_tokens/plasmic.module.css"; // plasmic-import: 4vjRXvnb4XuY6J15w9oRcQ/projectcss
import projectcss from "./plasmic.module.css"; // plasmic-import: t4V3p66SUxNrC7VqQmN1Jm/projectcss
import sty from "./PlasmicHome.module.css"; // plasmic-import: 0mCKeT4MIMer/css

createPlasmicElementProxy;

export type PlasmicHome__VariantMembers = {};
export type PlasmicHome__VariantsArgs = {};
type VariantPropType = keyof PlasmicHome__VariantsArgs;
export const PlasmicHome__VariantProps = new Array<VariantPropType>();

export type PlasmicHome__ArgsType = { children?: React.ReactNode };
type ArgPropType = keyof PlasmicHome__ArgsType;
export const PlasmicHome__ArgProps = new Array<ArgPropType>("children");

export type PlasmicHome__OverridesType = {
  homeNews?: Flex__<"div">;
  adsTop?: Flex__<"div">;
  body?: Flex__<"div">;
  heroNews?: Flex__<"div">;
  newsTerbaru?: Flex__<"div">;
  terbaru?: Flex__<"div">;
};

export interface DefaultHomeProps {}

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicHome__RenderFunc(props: {
  variants: PlasmicHome__VariantsArgs;
  args: PlasmicHome__ArgsType;
  overrides: PlasmicHome__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const args = React.useMemo(
    () =>
      Object.assign(
        {},
        Object.fromEntries(
          Object.entries(props.args).filter(([_, v]) => v !== undefined)
        )
      ),
    [props.args]
  );

  const $props = {
    ...args,
    ...variants
  };

  const __nextRouter = useNextRouter();

  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  return (
    <React.Fragment>
      <Head></Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"homeNews"}
          data-plasmic-override={overrides.homeNews}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            plasmic_antd_5_hostless_css.plasmic_tokens,
            plasmic_plasmic_rich_components_css.plasmic_tokens,
            plasmic_library_tailwind_3_4_colors_css.plasmic_tokens,
            plasmic_library_tailwind_3_4_number_tokens_css.plasmic_tokens,
            sty.homeNews
          )}
        >
          {renderPlasmicSlot({
            defaultContents: (
              <NavbarTuturWarta
                activePageSlug={(() => {
                  try {
                    return $ctx.pagePath;
                  } catch (e) {
                    if (
                      e instanceof TypeError ||
                      e?.plasmicType === "PlasmicUndefinedDataError"
                    ) {
                      return undefined;
                    }
                    throw e;
                  }
                })()}
                className={classNames(
                  "__wab_instance",
                  sty.navbarTuturWarta__n37Ru
                )}
                socialLink2={
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__i0DiT
                    )}
                  >
                    {"Ikon Sosial Dinamis"}
                  </div>
                }
              />
            ),

            value: args.children
          })}
          <div
            data-plasmic-name={"adsTop"}
            data-plasmic-override={overrides.adsTop}
            className={classNames(projectcss.all, sty.adsTop)}
          >
            <PlasmicImg__
              alt={""}
              className={classNames(sty.img__jFy1Y)}
              displayHeight={"121px"}
              displayMaxHeight={"none"}
              displayMaxWidth={"100%"}
              displayMinHeight={"0"}
              displayMinWidth={"0"}
              displayWidth={"485px"}
              loading={"lazy"}
              src={{
                src: "/plasmic/tutur_warta_frontend/images/adsPng.png",
                fullWidth: 1102,
                fullHeight: 282,
                aspectRatio: undefined
              }}
            />
          </div>
          <div
            data-plasmic-name={"body"}
            data-plasmic-override={overrides.body}
            className={classNames(projectcss.all, sty.body)}
          >
            <Stack__
              as={"div"}
              data-plasmic-name={"heroNews"}
              data-plasmic-override={overrides.heroNews}
              hasGap={true}
              className={classNames(projectcss.all, sty.heroNews)}
            >
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__hhgjy)}
              >
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__onfQ)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"45%"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/tutur_warta_frontend/images/image2.png",
                    fullWidth: 751,
                    fullHeight: 421,
                    aspectRatio: undefined
                  }}
                />

                <div className={classNames(projectcss.all, sty.freeBox__ds9R)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox___1EkJf)}
                  >
                    <h1
                      className={classNames(
                        projectcss.all,
                        projectcss.h1,
                        projectcss.__wab_text,
                        sty.h1__pi5Nw
                      )}
                    >
                      {
                        "Prabowo Akan Keluarkan Peraturan untuk Selesaikan Polemik 4 Pulau"
                      }
                    </h1>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__iaZF)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___2ChU
                      )}
                    >
                      {
                        'Jakarta, CNN Indonesia -- Kepala Kantor Komunikasi Kepresidenan Hasan Nasbi mengatakan Presiden RI Prabowo Subianto akan mengeluarkan peraturan menyelesaikan polemik empat pulau antara Sumatra Utara-Aceh.\r\nIa menyatakan Prabowo akan mengeluarkan peraturan yang mengikat dan mempertegas persoalan batas wilayah di sana.\r\n\r\n"Bentuknya tentu dalam peraturan-peraturan yang mengikat soal batas wilayah. Jadi bukan Inpres, bukan Perpres, tapi peraturan yang mengikat soal batas wilayah," kata Hasan di kantornya, Jakarta, Senin (16/6).\r\n\r\n'
                      }
                    </div>
                  </div>
                </div>
              </Stack__>
            </Stack__>
            <div
              data-plasmic-name={"newsTerbaru"}
              data-plasmic-override={overrides.newsTerbaru}
              className={classNames(projectcss.all, sty.newsTerbaru)}
            >
              <Stack__
                as={"div"}
                data-plasmic-name={"terbaru"}
                data-plasmic-override={overrides.terbaru}
                hasGap={true}
                className={classNames(projectcss.all, sty.terbaru)}
              >
                <div
                  className={classNames(projectcss.all, sty.freeBox___4Zw1W)}
                >
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img__svSh1)}
                    displayHeight={"auto"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"auto"}
                    loading={"lazy"}
                    src={{
                      src: "/plasmic/tutur_warta_frontend/images/image3.png",
                      fullWidth: 690,
                      fullHeight: 389,
                      aspectRatio: undefined
                    }}
                  />

                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__p4Aj)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__uiUkn
                      )}
                    >
                      {"Sport"}
                    </div>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___8V0Ed
                      )}
                    >
                      {"Sepak Bola"}
                    </div>
                  </Stack__>
                  <h1
                    className={classNames(
                      projectcss.all,
                      projectcss.h1,
                      projectcss.__wab_text,
                      sty.h1___6Hl4N
                    )}
                  >
                    {
                      "Sebegini Dominannya Bayern Munich atas Auckland City hingga Pesta 10-0\r\n\r\n\r"
                    }
                  </h1>
                </div>
                <div
                  className={classNames(projectcss.all, sty.freeBox___7Dfrj)}
                >
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img__wNvb7)}
                    displayHeight={"auto"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"auto"}
                    loading={"lazy"}
                    src={{
                      src: "/plasmic/tutur_warta_frontend/images/image3.png",
                      fullWidth: 690,
                      fullHeight: 389,
                      aspectRatio: undefined
                    }}
                  />

                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__bBkfZ)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__r7JXq
                      )}
                    >
                      {"Sport"}
                    </div>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__u23Dq
                      )}
                    >
                      {"Sepak Bola"}
                    </div>
                  </Stack__>
                  <h1
                    className={classNames(
                      projectcss.all,
                      projectcss.h1,
                      projectcss.__wab_text,
                      sty.h1__yg5Lz
                    )}
                  >
                    {
                      "Sebegini Dominannya Bayern Munich atas Auckland City hingga Pesta 10-0\r\n\r\n\r"
                    }
                  </h1>
                </div>
                <div className={classNames(projectcss.all, sty.freeBox__vTGxj)}>
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img__nDxSn)}
                    displayHeight={"auto"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"auto"}
                    loading={"lazy"}
                    src={{
                      src: "/plasmic/tutur_warta_frontend/images/image4.png",
                      fullWidth: 691,
                      fullHeight: 387,
                      aspectRatio: undefined
                    }}
                  />

                  <h1
                    className={classNames(
                      projectcss.all,
                      projectcss.h1,
                      projectcss.__wab_text,
                      sty.h1__khuy7
                    )}
                  >
                    {
                      "Dampak Buruk Zuckerberg Rekrut Pemuda Genius Pakar AI\r\n\r"
                    }
                  </h1>
                </div>
                <div className={classNames(projectcss.all, sty.freeBox__nHzl)}>
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img__vAbDj)}
                    displayHeight={"auto"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"auto"}
                    loading={"lazy"}
                    src={{
                      src: "/plasmic/tutur_warta_frontend/images/image4.png",
                      fullWidth: 691,
                      fullHeight: 387,
                      aspectRatio: undefined
                    }}
                  />

                  <h1
                    className={classNames(
                      projectcss.all,
                      projectcss.h1,
                      projectcss.__wab_text,
                      sty.h1__qimg6
                    )}
                  >
                    {
                      "Dampak Buruk Zuckerberg Rekrut Pemuda Genius Pakar AI\r\n\r"
                    }
                  </h1>
                </div>
              </Stack__>
            </div>
          </div>
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  homeNews: [
    "homeNews",
    "adsTop",
    "body",
    "heroNews",
    "newsTerbaru",
    "terbaru"
  ],
  adsTop: ["adsTop"],
  body: ["body", "heroNews", "newsTerbaru", "terbaru"],
  heroNews: ["heroNews"],
  newsTerbaru: ["newsTerbaru", "terbaru"],
  terbaru: ["terbaru"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  homeNews: "div";
  adsTop: "div";
  body: "div";
  heroNews: "div";
  newsTerbaru: "div";
  terbaru: "div";
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicHome__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicHome__VariantsArgs;
    args?: PlasmicHome__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicHome__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicHome__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicHome__ArgProps,
          internalVariantPropNames: PlasmicHome__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicHome__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "homeNews") {
    func.displayName = "PlasmicHome";
  } else {
    func.displayName = `PlasmicHome.${nodeName}`;
  }
  return func;
}

export const PlasmicHome = Object.assign(
  // Top-level PlasmicHome renders the root element
  makeNodeComponent("homeNews"),
  {
    // Helper components rendering sub-elements
    adsTop: makeNodeComponent("adsTop"),
    body: makeNodeComponent("body"),
    heroNews: makeNodeComponent("heroNews"),
    newsTerbaru: makeNodeComponent("newsTerbaru"),
    terbaru: makeNodeComponent("terbaru"),

    // Metadata about props expected for PlasmicHome
    internalVariantProps: PlasmicHome__VariantProps,
    internalArgProps: PlasmicHome__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicHome;
/* prettier-ignore-end */
